function varargout = ImLogique2(varargin)% Opérations logiques entre 2 images binaires de dimensions identiques% % INPUT:% - image1 Px1% - image2 Px1% - valeur texte opération : 'and' | 'or' | 'xor' | 'sub'%% OUTPUT:% - image Px1%% Plugin for OpenIsaac% version 1% © 2001-2018 Alain Clément - Université d'Angers%---------------------------------------------------------------------------------------------------% Copyright 2007 - 2018 Université d'Angers - Author: Alain Clément%% This program is free software; you can redistribute it and/or modify it under the terms of the GNU% General Public License as published by the Free Software Foundation; either version 3 of the% License, or any later version. This program is distributed in the hope that it will be useful, but% WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A% PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received% a copy of the GNU General Public License along with this program; if not, write to the Free% Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.%---------------------------------------------------------------------------------------------------% PLUGIN PARAMETERSif (nargin == 1) && strcmp(varargin{1},'-f')    % input	varargout{1} = {'IMG','image binaire 1', ...					'IMG','image binaire 2', ...					'DATA','opération'};    % output	varargout{2} = {'IMG','image binaire résultat'};	returnend	% INPUTObjIMG1 = varargin{1};ObjIMG2 = varargin{2};oper = IsaacDATA_get(varargin{3},'Val');%---------------------------------------------------------------------------------------------------if (IsaacIMG_get(ObjIMG1,'BitClass') ~= 1) || (IsaacIMG_get(ObjIMG2,'BitClass') ~= 1) || ...	~IsaacIMG_compare(ObjIMG1,ObjIMG2,'DimXYZ')	error('images incompatibles')endswitch opercase 'and'	ObjIMG1 = IsaacIMG_mat2img(ObjIMG1,and(IsaacIMG_img2mat(ObjIMG1),IsaacIMG_img2mat(ObjIMG2)));case 'or'	ObjIMG1 = IsaacIMG_mat2img(ObjIMG1,or(IsaacIMG_img2mat(ObjIMG1),IsaacIMG_img2mat(ObjIMG2)));case 'xor'	ObjIMG1 = IsaacIMG_mat2img(ObjIMG1,xor(IsaacIMG_img2mat(ObjIMG1),IsaacIMG_img2mat(ObjIMG2)));case 'sub'	ObjIMG1 = IsaacIMG_mat2img(ObjIMG1,IsaacIMG_img2mat(ObjIMG1) > IsaacIMG_img2mat(ObjIMG2));otherwise	error('opération invalide')end%---------------------------------------------------------------------------------------------------% OUTPUTvarargout{1} = ObjIMG1;	