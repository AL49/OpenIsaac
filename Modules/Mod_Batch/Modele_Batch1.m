function varargout = Modele_Batch1(varargin)% Modèle de Batch 1% Pour modules avec une image d'entrée et tableau de données en sortie% % INPUT:% - répertoire des images à traiter% - répertoire des résultats%% OUTPUT: néant%% Plugin for OpenIsaac% version 1% © 2010-2018 Alain Clément - Université d'Angers%---------------------------------------------------------------------------------------------------% Copyright 2007 - 2018 Université d'Angers - Author: Alain Clément%% This program is free software; you can redistribute it and/or modify it under the terms of the GNU% General Public License as published by the Free Software Foundation; either version 3 of the% License, or any later version. This program is distributed in the hope that it will be useful, but% WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A% PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received% a copy of the GNU General Public License along with this program; if not, write to the Free% Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.%---------------------------------------------------------------------------------------------------% PLUGIN PARAMETERSif (nargin == 1) && strcmp(varargin{1},'-f')    % input	varargout{1} = {'DATA','répertoire des images', ...					'DATA','répertoire des résultats'};    % output	varargout{2} = {};	returnend	% INPUTrep1 = IsaacDATA_get(varargin{1},'Val');rep2 = IsaacDATA_get(varargin{2},'Val');%---------------------------------------------------------------------------------------------------% fichier texte résultat (texte formaté pour recopie directe dans Excel)FTR = 'Modele_Batch.txt';% liste des paramètres du module à appeler (une ligne pour chaque jeu de valeurs)LP = [...];% liste des fichiers du répertoire d'entréelisteimages = IsaacDir(rep1,'f',true,false);nbimages = length(listeimages);% début sauvegarde de la fenêtre de messagesdiary(fullfile(rep2,FTR))% batchfprintf('\n%s\n',datestr(now))fprintf('\n')	fprintf('ATTENTION : le séparateur décimal est le ''.''\n')fprintf('\n')ticfor i = 1:nbimages	OK = false;	try		objIMG = IsaacIMG(listeimages{i});		OK = true;	catch exception		IsaacMessageErreur(listeimages{i},IsaacError(exception))	end	if OK		fprintf('########## %s\n',listeimages{i})		fprintf('\n')			for j=1:size(LP,1)			try				% appel du module avec les paramètres LP(j,1..n)				% affichage des résulats				% exemple tabulé pour recopie directe dans Excel				% objDATA = IsaacModule('NomduModule',objIMG,IsaacDATA('VALN',LP(j),''));				% DataVal = IsaacDATA_get(objDATA,'Val');				% printf('%d\t%.4f\t%d\n',DataVal(1),DataVal(2),DataVal(3))			catch exception				IsaacMessageErreur(listeimages{i},IsaacError(exception))			end		end		fprintf('\n')	endend	fprintf('########## FIN\n')fprintf('\n')tocfprintf('\n')% fin sauvegarde de la fenêtre de messagesdiary off% fin batchIsaacSound('ReturnOfTheJedi')%---------------------------------------------------------------------------------------------------% OUTPUT% néant